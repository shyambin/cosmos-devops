---
version: "3"
services:
  node1:
    image: &node-image asguardnetwork/spacefolders:gaia-v10.0.1
    container_name: node1
    restart: always
    environment: &node-env
      CHAIN_ID: load-test-1
      NODE1_HOME: /root/node1/.gaia
      NODE2_HOME: /root/node2/.gaia
      NODE3_HOME: /root/node3/.gaia
    ports:
      - 26657
    volumes: &node-volumes
      - chain-data1:/root/node1/.gaia
      - chain-data2:/root/node2/.gaia
      - chain-data3:/root/node3/.gaia
    entrypoint: sh
    networks: &node-network
      - tmkms-cosmos
    command:
      - -cex
      - |
        if [[ ! -f $$NODE1_HOME/config/genesis.json ]];
        then
          gaiad --home $$NODE1_HOME init test --chain-id $$CHAIN_ID
          gaiad --home $$NODE1_HOME keys add test --keyring-backend test
          gaiad --home $$NODE1_HOME add-genesis-account test 10000000000000000000000stake --keyring-backend test
          gaiad --home $$NODE1_HOME gentx test 1000000000stake --keyring-backend test --chain-id $$CHAIN_ID
          gaiad --home $$NODE1_HOME collect-gentxs
          sed -i 's%priv_validator_laddr =.*%priv_validator_laddr = "tcp://0.0.0.0:26658"%g' $$NODE1_HOME/config/config.toml
          sed -i '/^priv_validator_key_file =.*/ s/./#&/' $$NODE1_HOME/config/config.toml
          sed -i '/^priv_validator_state_file =.*/ s/./#&/' $$NODE1_HOME/config/config.toml
          sleep 30
        fi
        gaiad --home $$NODE1_HOME start --rpc.laddr=tcp://0.0.0.0:26657 &
        # putting sleep for debugging purpose
        sleep 99999

  node2:
    image: *node-image
    container_name: node2
    restart: always
    environment: *node-env
    volumes: *node-volumes
    entrypoint: sh
    networks: *node-network
    command:
      - -cex
      - |
        if [[ ! -f $$NODE2_HOME/config/genesis.json ]];
        then
          gaiad --home $$NODE2_HOME init test2 --chain-id $$CHAIN_ID
          gaiad --home $$NODE2_HOME keys add test2 --keyring-backend test
          sleep 10
          sed -i 's/persistent_peers =.*/persistent_peers = "'$$(gaiad --home $$NODE1_HOME tendermint show-node-id)@node1:26656,$$(gaiad --home $$NODE3_HOME tendermint show-node-id)@node3:26656'"/g' $$NODE2_HOME/config/config.toml
          cat $$NODE2_HOME/config/config.toml | grep persistent_peers
          # sed -i "s/rpc_servers =.*/rpc_servers = "'"node1:26657,node1:26657"'"/g" $$NODE2_HOME/config/config.toml
          # cat $$NODE2_HOME/config/config.toml | grep rpc_servers
          cp $$NODE1_HOME/config/genesis.json $$NODE2_HOME/config/genesis.json
          sleep 30
        fi
        gaiad --home $$NODE2_HOME start --rpc.laddr=tcp://0.0.0.0:26657 &
        # putting sleep for debugging purpose
        sleep 99999

  node3:
    image: *node-image
    container_name: node3
    restart: always
    environment: *node-env
    volumes: *node-volumes
    entrypoint: sh
    networks: *node-network
    command:
      - -cex
      - |
        if [[ ! -f $$NODE3_HOME/config/genesis.json ]];
        then
          gaiad --home $$NODE3_HOME init test3 --chain-id $$CHAIN_ID
          gaiad --home $$NODE3_HOME keys add test3 --keyring-backend test
          sleep 10
          sed -i 's/persistent_peers =.*/persistent_peers = "'$$(gaiad --home $$NODE1_HOME tendermint show-node-id)@node1:26656,$$(gaiad --home $$NODE2_HOME tendermint show-node-id)@node2:26656'"/g' $$NODE3_HOME/config/config.toml
          cat $$NODE3_HOME/config/config.toml | grep persistent_peers
          # sed -i "s/rpc_servers =.*/rpc_servers = "'"node1:26657,node1:26657"'"/g" $$NODE3_HOME/config/config.toml
          # cat $$NODE3_HOME/config/config.toml | grep rpc_servers
          cp $$NODE1_HOME/config/genesis.json $$NODE3_HOME/config/genesis.json
          sleep 30
        fi
        gaiad --home $$NODE3_HOME start --rpc.laddr=tcp://0.0.0.0:26657 &
        # putting sleep for debugging purpose
        sleep 99999

  signer1:
    image: shyamsv/tmkms:0.12.2-alpine-3.18.2
    container_name: signer1
    restart: always
    environment:
      <<: *node-env
      TMKMS_HOME: /root/.tmkms
    networks: *node-network
    volumes:
      - signer-data1:/root/.tmkms
      - chain-data1:/root/node1/.gaia
    entrypoint: sh
    command:
      - -cex
      - |
        if [[ ! -f $$TMKMS_HOME/tmkms.toml ]] && [[ ! -f $$TMKMS_HOME/secrets/$$CHAIN_ID-consensus.key ]] ;
        then
          # running tmkms init to generate config
          tmkms init $$TMKMS_HOME
          sleep 20

          # copy the private key from validator node to the tmkms container
          cp $$NODE1_HOME/config/priv_validator_key.json $$TMKMS_HOME/secrets

          # update chain-id
          sed -i "s/cosmoshub-3/$$CHAIN_ID/g" $$TMKMS_HOME/tmkms.toml

          # update protocol version
          sed -i 's/protocol_version =.*/protocol_version = "v0.34"/g' $$TMKMS_HOME/tmkms.toml

          # update validator node address
          sed -i 's%addr =.*%addr = "tcp://node1:26658"%g' $$TMKMS_HOME/tmkms.toml

          # importing validator node private key into softsign
          tmkms softsign import $$TMKMS_HOME/secrets/priv_validator_key.json $$TMKMS_HOME/secrets/$$CHAIN_ID-consensus.key
        fi

        # starting tmkms remote signer
        tmkms start --config $$TMKMS_HOME/tmkms.toml

volumes:
  chain-data1:
  chain-data2:
  chain-data3:
  signer-data1:

networks:
  tmkms-cosmos:
