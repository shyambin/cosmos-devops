---
version: "3"
services:
  node1:
    image: &node-image asguardnetwork/spacefolders:gaia-v10.0.1
    container_name: node1
    environment: &node-env
      CHAIN_ID: load-test-1
      NODE1_HOME: /root/node1/.gaia
      NODE2_HOME: /root/node2/.gaia
      NODE3_HOME: /root/node3/.gaia
    ports: &node-ports
      - 26657
    volumes: &node-volumes
      - chain-data1:/root/node1/.gaia
      - chain-data2:/root/node2/.gaia
      - chain-data3:/root/node3/.gaia
    networks: &node-network
      - horcrux-cosmos
    entrypoint: sh
    command:
      - -cex
      - |
        if [[ ! -f $$NODE1_HOME/config/genesis.json ]];
        then
          gaiad --home $$NODE1_HOME init test --chain-id $$CHAIN_ID
          gaiad --home $$NODE1_HOME keys add test --keyring-backend test
          gaiad --home $$NODE1_HOME add-genesis-account test 10000000000000000000000stake --keyring-backend test
          gaiad --home $$NODE1_HOME gentx test 1000000000stake --keyring-backend test --chain-id $$CHAIN_ID
          gaiad --home $$NODE1_HOME collect-gentxs
        fi
        gaiad --home $$NODE1_HOME start --rpc.laddr=tcp://0.0.0.0:26657 &
        # putting sleep for debugging purpose
        sleep 999999

  node2:
    image: *node-image
    container_name: node2
    environment: *node-env
    ports: *node-ports
    volumes: *node-volumes
    networks: *node-network
    entrypoint: sh
    command:
      - -cex
      - |
        if [[ ! -f $$NODE2_HOME/config/genesis.json ]];
        then
          gaiad --home $$NODE2_HOME init test2 --chain-id $$CHAIN_ID
          gaiad --home $$NODE2_HOME keys add test2 --keyring-backend test
          sleep 10
          # adding persistent peers
          sed -i 's/persistent_peers =.*/persistent_peers = "'$$(gaiad --home $$NODE1_HOME tendermint show-node-id)@node1:26656,$$(gaiad --home $$NODE3_HOME tendermint show-node-id)@node3:26656'"/g' $$NODE2_HOME/config/config.toml
          cat $$NODE2_HOME/config/config.toml | grep persistent_peers
          # sed -i "s/rpc_servers =.*/rpc_servers = "'"node1:26657,node1:26657"'"/g" $$NODE2_HOME/config/config.toml
          # cat $$NODE2_HOME/config/config.toml | grep rpc_servers
          # copying genesis.json file from node1 to node2
          cp $$NODE1_HOME/config/genesis.json $$NODE2_HOME/config/genesis.json
        fi
        gaiad --home $$NODE2_HOME start --rpc.laddr=tcp://0.0.0.0:26657 &
        # putting sleep for debugging purpose
        sleep 999999

  node3:
    image: *node-image
    container_name: node3
    environment: *node-env
    ports: *node-ports
    volumes: *node-volumes
    networks: *node-network
    entrypoint: sh
    command:
      - -cex
      - |
        if [[ ! -f $$NODE3_HOME/config/genesis.json ]];
        then
          gaiad --home $$NODE3_HOME init test3 --chain-id $$CHAIN_ID
          gaiad --home $$NODE3_HOME keys add test3 --keyring-backend test
          sleep 10
          # adding persistent peers
          sed -i 's/persistent_peers =.*/persistent_peers = "'$$(gaiad --home $$NODE1_HOME tendermint show-node-id)@node1:26656,$$(gaiad --home $$NODE2_HOME tendermint show-node-id)@node2:26656'"/g' $$NODE3_HOME/config/config.toml
          cat $$NODE3_HOME/config/config.toml | grep persistent_peers
          # sed -i "s/rpc_servers =.*/rpc_servers = "'"node1:26657,node1:26657"'"/g" $$NODE3_HOME/config/config.toml
          # cat $$NODE3_HOME/config/config.toml | grep rpc_servers
          # copying genesis.json file from node1 to node3
          cp $$NODE1_HOME/config/genesis.json $$NODE3_HOME/config/genesis.json
        fi
        gaiad --home $$NODE3_HOME start --rpc.laddr=tcp://0.0.0.0:26657 &
        # putting sleep for debugging purpose
        sleep 999999

  signer-init:
    image: &horcrux-image ghcr.io/strangelove-ventures/horcrux:main
    container_name: signer-init
    networks: *node-network
    environment:
      HORCRUX_HOME: /root/.horcrux_init
      SIGNER1_HOME: /root/signer1
      SIGNER2_HOME: /root/signer2
      SIGNER3_HOME: /root/signer3
      COSIGNER1_HOME: /root/cosigner_1
      COSIGNER2_HOME: /root/cosigner_2
      COSIGNER3_HOME: /root/cosigner_3
      <<: *node-env
    volumes:
      - chain-data1:/root/node1/.gaia
      - chain-data2:/root/node2/.gaia
      - chain-data3:/root/node3/.gaia
      - signer-init:/root/.horcrux_init
      - signer-data1:/root/signer1
      - signer-data2:/root/signer2
      - signer-data3:/root/signer3
    entrypoint: sh
    command:
      - -cex
      - |
        if [[ ! -f $$HORCRUX_HOME/config.yaml ]];
        then
          sleep 10
          # Create initial config
          horcrux --home $$HORCRUX_HOME config init --node "tcp://node1:26660" --node "tcp://node2:26660" --node "tcp://node3:26660" --cosigner "tcp://signer1:2222" --cosigner "tcp://signer2:2222" --cosigner "tcp://signer3:2222" --threshold 2 --grpc-timeout 1000ms --raft-timeout 1000ms

          # Create rsa keys json
          horcrux --home $$HORCRUX_HOME create-rsa-shards --shards 3

          # Create the shards of the validator priv key
          horcrux --home $$HORCRUX_HOME create-ed25519-shards --chain-id $$CHAIN_ID --key-file $$NODE1_HOME/config/priv_validator_key.json --threshold 2 --shards 3

          # Remove signature and signbytes and create new json
          sed "/\b\(signature\|signbytes\)\b/d" $$NODE1_HOME/data/priv_validator_state.json > $$HORCRUX_HOME/state/$$CHAIN_ID_priv_validator_state.json

          # Add double quotes around the value of "round", i.e. "round": 0 to "round": "0"
          sed -i 's/"round": 0/"round": "0"/g' $$HORCRUX_HOME/state/$$CHAIN_ID_priv_validator_state.json

          # Remove comma
          sed -i '4 s/,//g' $$HORCRUX_HOME/state/$$CHAIN_ID_priv_validator_state.json

          # Copy config and state to other signers
          cp -r $$HORCRUX_HOME/* $$SIGNER1_HOME
          cp -r $$HORCRUX_HOME/* $$SIGNER2_HOME
          cp -r $$HORCRUX_HOME/* $$SIGNER3_HOME

          # Copy shard json and rsa keys json to node1 volume
          cp /root/cosigner_1/* $$SIGNER1_HOME

          # Copy shard json and rsa keys json to node2 volume
          cp /root/cosigner_2/* $$SIGNER2_HOME

          # Copy shard json and rsa keys json to node3 volume
          cp /root/cosigner_3/* $$SIGNER3_HOME

          # Update the validation address to a new port on node1, node2 and node3
          sed -i 's%priv_validator_laddr =.*%priv_validator_laddr = "tcp://0.0.0.0:26660"%g' $$NODE1_HOME/config/config.toml
          sed -i 's%priv_validator_laddr =.*%priv_validator_laddr = "tcp://0.0.0.0:26660"%g' $$NODE2_HOME/config/config.toml
          sed -i 's%priv_validator_laddr =.*%priv_validator_laddr = "tcp://0.0.0.0:26660"%g' $$NODE3_HOME/config/config.toml

          # sed -i '/^priv_validator_key_file =.*/ s/./#&/' $$NODE2_HOME/config/config.toml
          # sed -i '/^priv_validator_key_file =.*/ s/./#&/' $$NODE3_HOME/config/config.toml

          # sed -i '/^priv_validator_state_file =.*/ s/./#&/' $$NODE2_HOME/config/config.toml
          # sed -i '/^priv_validator_state_file =.*/ s/./#&/' $$NODE3_HOME/config/config.toml
        else
          echo "config.yaml file already exists at $$HORCRUX_HOME so skipping"
        fi

  signer1:
    image: *horcrux-image
    container_name: signer1
    restart: always
    environment: &signer-env
      - HORCRUX_HOME=/root/.horcrux
    networks: *node-network
    volumes:
      - signer-data1:/root/.horcrux
    entrypoint: sh
    command:
      - -cex
      - |
        sleep 150
        if [[ ! -f $$HORCRUX_HOME/config.yaml ]];
        then
          echo "no config.yaml file found at $$HORCRUX_HOME"
          exit 1
        fi
        horcrux start

  signer2:
    image: *horcrux-image
    container_name: signer2
    restart: always
    environment: *signer-env
    networks: *node-network
    volumes:
      - signer-data2:/root/.horcrux
    entrypoint: sh
    command:
      - -cex
      - |
        sleep 150
        if [[ ! -f $$HORCRUX_HOME/config.yaml ]];
        then
          echo "no config.yaml file found at $$HORCRUX_HOME"
          exit 1
        fi
        horcrux start

  signer3:
    image: *horcrux-image
    container_name: signer3
    restart: always
    environment: *signer-env
    networks:
      - horcrux-cosmos
    volumes:
      - signer-data3:/root/.horcrux
    entrypoint: sh
    command:
      - -cex
      - |
        sleep 150
        if [[ ! -f $$HORCRUX_HOME/config.yaml ]];
        then
          echo "no config.yaml file found at $$HORCRUX_HOME"
          exit 1
        fi
        horcrux start

volumes:
  chain-data1:
  chain-data2:
  chain-data3:
  signer-init:
  signer-data1:
  signer-data2:
  signer-data3:

networks:
  horcrux-cosmos:
